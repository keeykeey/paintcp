{"ast":null,"code":"export default {\n  name: \"PaintPallet\",\n  props: {\n    color: String,\n    fontSize: String\n  },\n  data: function () {\n    return {\n      is_drawing_mode: false\n    };\n  },\n  mounted: function () {\n    this.canvas = this.$refs.canvas;\n    this.context = this.canvas.getContext(\"2d\");\n    this.rect = this.canvas.getBoundingClientRect();\n  },\n  methods: {\n    draw(e) {\n      switch (this.is_drawing_mode) {\n        case false:\n          break;\n        case true:\n          {\n            this.context.fillStyle = this.color;\n            this.context.fillRect(e.clientX - this.rect.left, e.clientY - this.rect.top, Number(this.fontSize), Number(this.fontSize));\n            break;\n          }\n        default:\n          break;\n      }\n    },\n    changeMode() {\n      this.is_drawing_mode = !this.is_drawing_mode;\n    }\n  }\n};","map":{"version":3,"mappings":"AAiBA;EACAA;EACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACA;IACA;IACA;EACA;EACAC;IACAC;MACA;QACA;UACA;QACA;UACA;YACA;YACA,sBACAC,4BACAA,2BACAC,uBACAA,sBACA;YACA;UACA;QACA;UACA;MAAA;IAEA;IACAC;MACA;IACA;EACA;AACA","names":["name","props","color","fontSize","data","is_drawing_mode","mounted","methods","draw","e","Number","changeMode"],"sourceRoot":"src/components","sources":["PaintPallet.vue"],"sourcesContent":["<template>\n  <div class=\"comp\">\n    <div>\n        <canvas \n            width = \"600\"\n            height = \"600\"\n            class=\"canvas\" ref=\"canvas\"\n            @mousemove = \"draw\"\n            @mousedown = \"changeMode\"\n            @mouseup   = \"changeMode\"\n         ></canvas>\n    </div>\n    <button v-on:click=\"changeMode\">start drawing</button>\n  </div>\n</template>\n\n<script>\nexport default {\n    name: \"PaintPallet\",\n    props: {\n        color     : String,\n        fontSize  : String,\n    },\n    data: function(){\n        return {\n            is_drawing_mode: false,\n        }\n    },\n    mounted: function(){\n        this.canvas  = this.$refs.canvas;\n        this.context = this.canvas.getContext(\"2d\");\n        this.rect    = this.canvas.getBoundingClientRect();\n    },\n    methods: {\n        draw(e){\n            switch (this.is_drawing_mode){\n                case false:\n                    break;\n                case true:\n                {\n                    this.context.fillStyle = this.color;\n                    this.context.fillRect(\n                        e.clientX - this.rect.left,\n                        e.clientY - this.rect.top,\n                        Number(this.fontSize),\n                        Number(this.fontSize)\n                    );\n                    break;\n                }\n                default:\n                    break;\n            }\n        },\n        changeMode(){\n            this.is_drawing_mode = !this.is_drawing_mode;\n        }\n    }\n}\n\n\n</script>\n\n\n\n<style scoped>\ncanvas{\n    border:solid 1px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}